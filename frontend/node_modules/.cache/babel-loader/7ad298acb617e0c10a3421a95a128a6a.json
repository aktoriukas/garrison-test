{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/FullPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { api_votePost, api_getSinglePost } from '../API-calls';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullPost({\n  match\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const id = match.id;\n  useEffect(() => {}, [input]);\n\n  const getSinglePost = async () => {\n    const post = await api_getSinglePost(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post.deleted === false ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Vote, {\n        handleClick: handleClick,\n        score: post.voteScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), comments.map(comment => {\n        if (!comment.deleted) return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 53\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(CommentForm, {\n        parentId: id || match.params.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FullPost, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FullPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullPost\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/FullPost.js"],"names":["React","useEffect","useSelector","useDispatch","api_votePost","api_getSinglePost","CommentForm","FullPost","match","dispatch","id","input","getSinglePost","post","deleted","title","body","handleClick","voteScore","comments","map","comment","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,cAAhD;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAAA;;AAE1C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,EAAE,GAAGF,KAAK,CAACE,EAAjB;AAEAT,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACU,KAAD,CAFM,CAAT;;AAIA,QAAMC,aAAa,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAG,MAAMR,iBAAiB,CAACK,EAAD,CAApC;AACH,GAFD;;AAKA,sBACI;AAAA,cACKG,IAAI,CAACC,OAAL,KAAiB,KAAjB,gBAED;AAAA,8BAEI;AAAA,kBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,kBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,IAAD;AAAM,QAAA,WAAW,EAAEC,WAAnB;AAAgC,QAAA,KAAK,EAAEJ,IAAI,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAYSC,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;AACrB,YAAG,CAACA,OAAO,CAACP,OAAZ,EAAqB,oBAAO,QAAC,OAAD;AAEQ,UAAA,OAAO,EAAEO;AAFjB,WACaA,OAAO,CAACX,EADrB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGpB,OAJJ,CAZT,eAkBQ,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA,EAAE,IAAIF,KAAK,CAACc,MAAN,CAAaZ;AAA1C;AAAA;AAAA;AAAA;AAAA,cAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,GAwBD;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA7CuBH,Q;UAEHJ,W;;;KAFGI,Q","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { api_votePost, api_getSinglePost } from '../API-calls'\nimport CommentForm from './CommentForm'\n\nexport default function FullPost( { match } ) {\n\n    const dispatch = useDispatch()\n    const id = match.id\n\n    useEffect(() => {\n        \n    }, [input])\n\n    const getSinglePost = async () => {\n        const post = await api_getSinglePost(id)\n    }\n\n\n    return (\n        <div>\n            {post.deleted === false ?\n            \n            <li>\n    \n                <h3>{post.title}</h3>\n    \n                <p>{post.body}</p>\n    \n                <Vote handleClick={handleClick} score={post.voteScore} />\n    \n                <button>delete</button>\n                <button>edit</button>\n    \n                \n                    {comments.map(comment => {\n                        if(!comment.deleted) return <Comment \n                                                            key={comment.id} \n                                                            comment={comment}/>\n                        })}\n\n                    <CommentForm parentId={id || match.params.id}/>\n        \n            </li>\n            :\n            ''\n            } \n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}