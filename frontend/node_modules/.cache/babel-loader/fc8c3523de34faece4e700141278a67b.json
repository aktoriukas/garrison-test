{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostsTeasers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { api_getAllPosts, api_getPostByCategory } from '../API-calls';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RECEIVE_POSTS, RECEIVE_POSTS_BY_CATEGORY } from '../actions';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostsTeasers({\n  match\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  useEffect(() => {\n    if (match.params.category) {\n      console.log(match.params.category);\n      dispatch({\n        type: RECEIVE_POSTS_BY_CATEGORY,\n        category: match.params.category\n      });\n    } else {\n      getAllPosts();\n    }\n  }, []);\n\n  const getAllPosts = async () => {\n    const posts = await api_getAllPosts();\n    dispatch({\n      type: RECEIVE_POSTS,\n      posts: posts\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"posts-container\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      id: post.id\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostsTeasers, \"ENUDqdKwIx40U6eZCutSSehqnb4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostsTeasers;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsTeasers\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostsTeasers.js"],"names":["React","useEffect","useState","Link","api_getAllPosts","api_getPostByCategory","useSelector","useDispatch","RECEIVE_POSTS","RECEIVE_POSTS_BY_CATEGORY","Post","PostsTeasers","match","dispatch","posts","state","params","category","console","log","type","getAllPosts","map","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,cAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,yBAAxB,QAAyD,YAAzD;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAgC;AAAA;;AAE3C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGW,KAAK,CAACI,MAAN,CAAaC,QAAhB,EAAyB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,MAAN,CAAaC,QAAzB;AACAJ,MAAAA,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAEX,yBAAP;AAAkCQ,QAAAA,QAAQ,EAAEL,KAAK,CAACI,MAAN,CAAaC;AAAzD,OAAD,CAAR;AACH,KAHD,MAGK;AACDI,MAAAA,WAAW;AACd;AAEJ,GATQ,EASN,EATM,CAAT;;AAWA,QAAMA,WAAW,GAAG,YAAY;AAC5B,UAAMP,KAAK,GAAG,MAAMV,eAAe,EAAnC;AACAS,IAAAA,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAAEZ,aAAP;AAAsBM,MAAAA,KAAK,EAAEA;AAA7B,KAAD,CAAR;AAEH,GAJD;;AAMA,sBACI;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA,cAEKA,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBAGX,QAAC,IAAD;AAAoB,MAAA,IAAI,EAAEA,IAA1B;AAAgC,MAAA,EAAE,EAAEA,IAAI,CAACC;AAAzC,OAAWD,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,YAHH;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAjCuBb,Y;UAEHJ,W,EACHD,W;;;KAHMK,Y","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { api_getAllPosts, api_getPostByCategory } from '../API-calls'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RECEIVE_POSTS, RECEIVE_POSTS_BY_CATEGORY } from '../actions'\n\nimport Post from './Post'\n\nexport default function PostsTeasers({ match}) {\n\n    const dispatch = useDispatch()\n    const posts = useSelector(state => state.posts)\n  \n    useEffect(() => {\n\n        if(match.params.category){\n            console.log(match.params.category)\n            dispatch({type: RECEIVE_POSTS_BY_CATEGORY, category: match.params.category})\n        }else{\n            getAllPosts()\n        }\n        \n    }, [])\n\n    const getAllPosts = async () => {\n        const posts = await api_getAllPosts()\n        dispatch({type: RECEIVE_POSTS, posts: posts})\n\n    }\n    \n    return (\n        <ul className=\"posts-container\">\n\n            {posts.map(post => \n\n\n                <Post key={post.id} post={post} id={post.id} />\n\n            )}\n        </ul>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}