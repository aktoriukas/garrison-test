{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostsTeasers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { api_getAllPosts, api_getPostByCategory } from '../API-calls';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RECEIVE_POSTS } from '../actions';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostsTeasers({\n  match\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [sortBy, setSortBy] = useState('');\n  const posts = useSelector(state => state.posts);\n  useEffect(() => {\n    if (match.params.category) {\n      getCateryPosts();\n    } else {\n      getAllPosts();\n    }\n  }, []);\n\n  const getCateryPosts = async () => {\n    const posts = await api_getPostByCategory(match.params.category);\n    console.log(posts);\n    dispatch({\n      type: RECEIVE_POSTS,\n      posts: posts\n    });\n  };\n\n  const getAllPosts = async () => {\n    const posts = await api_getAllPosts();\n    dispatch({\n      type: RECEIVE_POSTS,\n      posts: posts\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"sort by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"commetn count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"posts-container\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        id: post.id\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostsTeasers, \"hGr53XrOwmcbeifxpwzPguRgowM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostsTeasers;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsTeasers\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostsTeasers.js"],"names":["React","useEffect","useState","Link","api_getAllPosts","api_getPostByCategory","useSelector","useDispatch","RECEIVE_POSTS","Post","PostsTeasers","match","dispatch","sortBy","setSortBy","posts","state","params","category","getCateryPosts","getAllPosts","console","log","type","map","post","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,cAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,YAA9B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAgC;AAAA;;AAE3C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMa,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGU,KAAK,CAACM,MAAN,CAAaC,QAAhB,EAAyB;AACrBC,MAAAA,cAAc;AACjB,KAFD,MAEK;AACDC,MAAAA,WAAW;AACd;AACJ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMD,cAAc,GAAG,YAAY;AAC/B,UAAMJ,KAAK,GAAG,MAAMV,qBAAqB,CAACM,KAAK,CAACM,MAAN,CAAaC,QAAd,CAAzC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAH,IAAAA,QAAQ,CAAC;AAACW,MAAAA,IAAI,EAAEf,aAAP;AAAsBO,MAAAA,KAAK,EAAEA;AAA7B,KAAD,CAAR;AACH,GAJD;;AAMA,QAAMK,WAAW,GAAG,YAAY;AAC5B,UAAML,KAAK,GAAG,MAAMX,eAAe,EAAnC;AACAQ,IAAAA,QAAQ,CAAC;AAACW,MAAAA,IAAI,EAAEf,aAAP;AAAsBO,MAAAA,KAAK,EAAEA;AAA7B,KAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,gBAEKA,KAAK,CAACS,GAAN,CAAUC,IAAI,iBAGX,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,EAAE,EAAEA,IAAI,CAACC;AAAzC,SAAWD,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAHH;AAFL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAoBH;;GA9CuBhB,Y;UAEHH,W,EAEHD,W;;;KAJMI,Y","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { api_getAllPosts, api_getPostByCategory } from '../API-calls'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RECEIVE_POSTS } from '../actions'\n\nimport Post from './Post'\n\nexport default function PostsTeasers({ match}) {\n\n    const dispatch = useDispatch()\n    const [sortBy, setSortBy] = useState('')\n    const posts = useSelector(state => state.posts)\n  \n    useEffect(() => {\n\n        if(match.params.category){\n            getCateryPosts()\n        }else{\n            getAllPosts()\n        }\n    }, [])\n\n    const getCateryPosts = async () => {\n        const posts = await api_getPostByCategory(match.params.category)\n        console.log(posts)\n        dispatch({type: RECEIVE_POSTS, posts: posts})\n    }\n\n    const getAllPosts = async () => {\n        const posts = await api_getAllPosts()\n        dispatch({type: RECEIVE_POSTS, posts: posts})\n    }\n    \n    return (\n        <>\n            <label>sort by:</label>\n            <select>\n                <option>-</option>\n                <option>title</option>\n                <option>commetn count</option>\n                <option>likes</option>\n            </select>\n            <ul className=\"posts-container\">\n\n                {posts.map(post => \n\n\n                    <Post key={post.id} post={post} id={post.id} />\n\n                )}\n            </ul>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}