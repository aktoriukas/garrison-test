{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { api_getSinglePost, api_getComments } from '../API-calls';\nimport Vote from './Vote';\nimport Comment from './Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  match,\n  id\n}) {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState(false);\n  useEffect(() => {\n    getSinglePost();\n    if (match) getComments();\n  }, []);\n\n  const getSinglePost = async () => {\n    const post = await api_getSinglePost(id || match.params.id);\n    setPost(post);\n  };\n\n  const getComments = async () => {\n    const comments = await api_getComments(match.params.id);\n    setComments(comments);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post.deleted ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Vote, {\n        score: post.voteScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), comments ? comments.map(comment => {\n        if (!comment.deleted) return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 57\n        }, this);\n      }) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : ''\n  }, void 0, false);\n}\n\n_s(Post, \"HhfSyv2Pzm0+T+54fF3tn6KnIyw=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js"],"names":["React","useEffect","useState","useSelector","useDispatch","api_getSinglePost","api_getComments","Vote","Comment","Post","match","id","post","setPost","comments","setComments","getSinglePost","getComments","params","deleted","title","body","voteScore","map","comment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,cAAnD;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAd,EAA8B;AAAA;;AAEzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZe,IAAAA,aAAa;AACb,QAAGN,KAAH,EAAUO,WAAW;AAExB,GALQ,EAKN,EALM,CAAT;;AAQA,QAAMD,aAAa,GAAG,YAAY;AAC9B,UAAMJ,IAAI,GAAG,MAAMP,iBAAiB,CAACM,EAAE,IAAID,KAAK,CAACQ,MAAN,CAAaP,EAApB,CAApC;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAHD;;AAIA,QAAMK,WAAW,GAAG,YAAY;AAC5B,UAAMH,QAAQ,GAAG,MAAMR,eAAe,CAACI,KAAK,CAACQ,MAAN,CAAaP,EAAd,CAAtC;AACAI,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAHD;;AAMA,sBACI;AAAA,cACKF,IAAI,CAACO,OAAL,gBAEG;AAAA,8BAEI;AAAA,kBAAKP,IAAI,CAACQ;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,kBAAIR,IAAI,CAACS;AAAT;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAET,IAAI,CAACU;AAAlB;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAWKR,QAAQ,GAELA,QAAQ,CAACS,GAAT,CAAaC,OAAO,IAAI;AACpB,YAAG,CAACA,OAAO,CAACL,OAAZ,EAAqB,oBAAO,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEK;AAAnC,WAAcA,OAAO,CAACb,EAAtB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACxB,OAFD,CAFK,GAQL,EAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,GA2BD;AA5BJ,mBADJ;AAkCH;;GAzDuBF,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { api_getSinglePost, api_getComments } from '../API-calls'\n\nimport Vote from './Vote'\nimport Comment from './Comment'\n\nexport default function Post({ match, id  }) {\n\n    const [post, setPost] = useState([])\n    const [comments, setComments] = useState(false)\n\n    useEffect(() => {\n\n        getSinglePost()\n        if(match) getComments()\n\n    }, [])\n\n\n    const getSinglePost = async () => {\n        const post = await api_getSinglePost(id || match.params.id)\n        setPost(post)\n    }\n    const getComments = async () => {\n        const comments = await api_getComments(match.params.id)\n        setComments(comments)\n    }\n\n\n    return (\n        <>\n            {post.deleted ?\n            \n                <li>\n        \n                    <h3>{post.title}</h3>\n        \n                    <p>{post.body}</p>\n        \n                    <Vote score={post.voteScore} />\n        \n                    <button>delete</button>\n                    <button>edit</button>\n        \n                    {comments ?\n                    \n                        comments.map(comment => {\n                            if(!comment.deleted) return <Comment key={comment.id} comment={comment}/>\n                        })\n        \n                        :\n        \n                        ''\n                    \n                    }\n        \n                </li>\n            :\n            ''\n            }\n        </>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}