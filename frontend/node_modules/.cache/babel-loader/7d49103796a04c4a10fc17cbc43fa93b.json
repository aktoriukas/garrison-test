{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Vote from './Vote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment({\n  comment,\n  handleClick\n}) {\n  _s();\n\n  const [edit, setEdit] = useState(false);\n  const [body, setBody] = useState(comment.body);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setBody(e.target.value),\n        value: body,\n        placeholder: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick('edit-save', 'comment'),\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: comment.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: comment.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Vote, {\n      type: \"comments\",\n      handleClick: handleClick,\n      score: comment.voteScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"vZOLPXeXiAIuSxMB92IVn61vc3U=\");\n\n_c = Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Comment.js"],"names":["React","useState","Vote","Comment","comment","handleClick","edit","setEdit","body","setBody","e","target","value","author","voteScore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAjB,EAA0C;AAAA;;AAErD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACG,OAAO,CAACI,IAAT,CAAhC;AAEA,sBACI;AAAA,eAEQF,IAAI,gBACJ;AAAA,8BACA;AACI,QAAA,QAAQ,EAAEI,CAAC,IAAID,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAD1B;AAEI,QAAA,KAAK,EAAEJ,IAFX;AAGI,QAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AACI,QAAA,OAAO,EAAE,MAAMH,WAAW,CAAC,WAAD,EAAc,SAAd,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA,oBADI,gBAaJ;AAAA,gBAAKD,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,YAfR,eAkBI;AAAA,gBAAKJ,OAAO,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAoBI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,WAAW,EAAER,WAAnC;AAAgD,MAAA,KAAK,EAAED,OAAO,CAACU;AAA/D;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBI;AAAQ,MAAA,OAAO,EAAE,MAAMP,OAAO,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GA/BuBJ,O;;KAAAA,O","sourcesContent":["import React, {useState } from 'react'\n\nimport Vote from './Vote'\n\nexport default function Comment({comment, handleClick }) {\n\n    const [edit, setEdit] = useState(false)\n    const [body, setBody] = useState(comment.body)\n\n    return (\n        <div>\n            {\n                edit ?\n                <>\n                <input \n                    onChange={e => setBody(e.target.value)}\n                    value={body} \n                    placeholder='post' />\n                <button\n                    onClick={() => handleClick('edit-save', 'comment')}\n                >save\n                </button>\n\n                </>\n                :\n                <h5>{comment.body}</h5>\n            }\n\n            <h6>{comment.author}</h6>\n\n            <Vote type='comments' handleClick={handleClick} score={comment.voteScore}/>\n\n            <button onClick={() => setEdit(true)}>edit</button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}