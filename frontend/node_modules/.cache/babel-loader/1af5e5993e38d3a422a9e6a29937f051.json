{"ast":null,"code":"import { RECEIVE_COMMENTS, ADD_COMMENT, DOWNVOTE_COMMENT, DELETE_COMMENT, UPDATE_COMMENT, UPVOTE_COMMENT } from \"../actions\";\nexport default ((state = [], action) => {\n  const {\n    comments,\n    comment,\n    type,\n    id\n  } = action;\n\n  switch (type) {\n    // UPDATE COMMENTS ===========================================\n    case RECEIVE_COMMENTS:\n      const newState = state.filter(comment => comment.id !== 0);\n      console.log(newState);\n      return [...comments];\n\n    case ADD_COMMENT:\n      return [...state, comment];\n    // VOTE COMMENT ===============================================\n\n    case DOWNVOTE_COMMENT:\n      return state.map(comment => {\n        if (comment.id === id) comment.voteScore--;\n        return comment;\n      });\n\n    case UPVOTE_COMMENT:\n      return state.map(comment => {\n        if (comment.id === id) comment.voteScore++;\n        return comment;\n      });\n    // EDIT COMMENT ================================================\n\n    case DELETE_COMMENT:\n      return state.filter(comment => comment.id !== id);\n\n    case UPDATE_COMMENT:\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/reducers/comments.js"],"names":["RECEIVE_COMMENTS","ADD_COMMENT","DOWNVOTE_COMMENT","DELETE_COMMENT","UPDATE_COMMENT","UPVOTE_COMMENT","state","action","comments","comment","type","id","newState","filter","console","log","map","voteScore"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,WAFJ,EAGIC,gBAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,QAM0B,YAN1B;AASA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAEnC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAkCJ,MAAxC;;AAEA,UAAOG,IAAP;AAEI;AAEA,SAAKV,gBAAL;AAEI,YAAMY,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAaJ,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAe,CAAvC,CAAjB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,aAAO,CAAE,GAAGJ,QAAL,CAAP;;AAEJ,SAAKP,WAAL;AAEI,aAAO,CAAC,GAAGK,KAAJ,EAAWG,OAAX,CAAP;AAGJ;;AAEA,SAAKP,gBAAL;AAEI,aAAOI,KAAK,CAACU,GAAN,CAAUP,OAAO,IAAI;AACxB,YAAIA,OAAO,CAACE,EAAR,KAAeA,EAAnB,EAAwBF,OAAO,CAACQ,SAAR;AACxB,eAAOR,OAAP;AACH,OAHM,CAAP;;AAMJ,SAAKJ,cAAL;AAEI,aAAOC,KAAK,CAACU,GAAN,CAAUP,OAAO,IAAI;AACxB,YAAIA,OAAO,CAACE,EAAR,KAAeA,EAAnB,EAAwBF,OAAO,CAACQ,SAAR;AACxB,eAAOR,OAAP;AACH,OAHM,CAAP;AAKJ;;AAEA,SAAKN,cAAL;AAEI,aAAOG,KAAK,CAACO,MAAN,CAAaJ,OAAO,IAAIA,OAAO,CAACE,EAAR,KAAeA,EAAvC,CAAP;;AAEJ,SAAKP,cAAL;AAEI,aAAOE,KAAP;;AAEJ;AACI,aAAOA,KAAP;AA5CR;AA+CD,CAnDH","sourcesContent":["import  { \n    RECEIVE_COMMENTS,\n    ADD_COMMENT,\n    DOWNVOTE_COMMENT,\n    DELETE_COMMENT,\n    UPDATE_COMMENT,\n    UPVOTE_COMMENT } from \"../actions\";\n\n\nexport default (state = [], action) => {\n\n    const { comments, comment, type, id } = action;\n  \n    switch(type) {\n\n        // UPDATE COMMENTS ===========================================\n  \n        case RECEIVE_COMMENTS:\n\n            const newState = state.filter(comment => comment.id !== 0)\n            console.log(newState)\n  \n            return [ ...comments]\n  \n        case ADD_COMMENT:\n  \n            return [...state, comment]\n\n\n        // VOTE COMMENT ===============================================\n  \n        case DOWNVOTE_COMMENT:\n\n            return state.map(comment => {\n                if( comment.id === id ) comment.voteScore--\n                return comment\n            })\n  \n  \n        case UPVOTE_COMMENT:\n\n            return state.map(comment => {\n                if( comment.id === id ) comment.voteScore++\n                return comment\n            })\n        \n        // EDIT COMMENT ================================================\n\n        case DELETE_COMMENT:\n\n            return state.filter(comment => comment.id !== id)\n\n        case UPDATE_COMMENT:\n\n            return state\n\n        default:\n            return state\n    }\n  \n  }\n  "]},"metadata":{},"sourceType":"module"}