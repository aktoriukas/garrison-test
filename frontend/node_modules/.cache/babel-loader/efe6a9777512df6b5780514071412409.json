{"ast":null,"code":"import { RECEIVE_POSTS, ADD_POST, UPVOTE_POST, DELETE_POST, UPDATE_POST, DOWNVOTE_POST, SORT_POSTS } from \"../actions\";\nimport { api_votePost, api_deletePost, api_updatePost, api_addPost } from '../API-calls';\nexport default ((state = [], action) => {\n  const {\n    posts,\n    type,\n    post,\n    id,\n    title,\n    body,\n    sort\n  } = action;\n\n  switch (type) {\n    // UPDATE POSTS ===========================================\n    case RECEIVE_POSTS:\n      return [...posts];\n\n    case ADD_POST:\n      if (api_addPost(post)) {\n        return [...state, post];\n      } else {\n        return state;\n      }\n\n    case SORT_POSTS:\n      switch (sort) {\n        case '-':\n          return state;\n\n        case 'score':\n          state.sort((a, b) => {\n            if (a.voteScore < b.voteScore) return 1;\n            if (a.voteScore > b.voteScore) return -1;\n            return 0;\n          });\n          return state;\n\n        case 'date':\n          state.sort((a, b) => {\n            if (a.timestamp < b.timestamp) return 1;\n            if (a.timestamp > b.timestamp) return -1;\n            return 0;\n          });\n\n        default:\n          return state;\n      }\n\n    // VOTE POST ===============================================\n\n    case DOWNVOTE_POST:\n      if (api_votePost(id, 'downVote')) {\n        return state.map(post => {\n          if (post.id === id) post.voteScore--;\n          return post;\n        });\n      } else {\n        return state;\n      }\n\n    case UPVOTE_POST:\n      if (api_votePost(id, 'upVote')) {\n        return state.map(post => {\n          if (post.id === id) post.voteScore++;\n          return post;\n        });\n      } else {\n        return state;\n      }\n\n    // EDIT POST ================================================\n\n    case DELETE_POST:\n      if (api_deletePost(id)) {\n        return state.map(post => {\n          if (post.id === id) {\n            post.deleted = true;\n          }\n\n          return post;\n        });\n      } else {\n        return state;\n      }\n\n    case UPDATE_POST:\n      if (api_updatePost(id, title, body)) {\n        return state.map(post => {\n          if (post.id === id) {\n            post.body = body;\n            post.title = title;\n          }\n\n          return post;\n        });\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/reducers/posts.js"],"names":["RECEIVE_POSTS","ADD_POST","UPVOTE_POST","DELETE_POST","UPDATE_POST","DOWNVOTE_POST","SORT_POSTS","api_votePost","api_deletePost","api_updatePost","api_addPost","state","action","posts","type","post","id","title","body","sort","a","b","voteScore","timestamp","map","deleted"],"mappings":"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","sourcesContent":["import { \n    RECEIVE_POSTS, \n    ADD_POST,\n    UPVOTE_POST,\n    DELETE_POST,\n    UPDATE_POST,\n    DOWNVOTE_POST,\n    SORT_POSTS } from \"../actions\";\n  \nimport { api_votePost, api_deletePost, api_updatePost, api_addPost } from '../API-calls'\n\nexport default (state = [], action) => {\n\n    const { posts, type, post, id, title, body, sort } = action;\n  \n    switch (type) {\n\n        // UPDATE POSTS ===========================================\n  \n        case RECEIVE_POSTS:\n            return [ ...posts ];\n  \n        case ADD_POST:\n            if(api_addPost(post)){\n                return [...state, post]\n            }else {\n                return state\n            }\n\n        case SORT_POSTS:\n\n            switch(sort){\n                case '-':\n                    return state\n                case 'score':\n                    state.sort((a,b) => {\n                        if(a.voteScore < b.voteScore) return 1\n                        if(a.voteScore > b.voteScore) return -1\n                        return 0\n                    })\n                    return state\n\n                case 'date':\n                    state.sort((a,b) => {\n                        if(a.timestamp < b.timestamp) return 1\n                        if(a.timestamp > b.timestamp) return -1\n                        return 0\n                    })\n\n                default:\n                    return state\n            }\n\n        // VOTE POST ===============================================\n\n        case DOWNVOTE_POST:\n\n            if(api_votePost(id, 'downVote')){\n                return state.map(post => {\n                    if( post.id === id ) post.voteScore--\n                    return post\n                })\n            }else{\n                return state\n            }\n\n    \n        case UPVOTE_POST:\n\n            if(api_votePost(id, 'upVote')){\n                return state.map(post => {\n                    if( post.id === id ) post.voteScore++\n                    return post\n                })\n            }else{\n                return state\n            }\n\n\n        // EDIT POST ================================================\n\n        case DELETE_POST:\n\n            if(api_deletePost(id)){\n                return state.map(post => {\n                    if(post.id === id){\n                        post.deleted = true\n                    }\n                    return post\n                })\n            }else{\n                return state\n            }\n\n    \n        case UPDATE_POST:\n\n            if(api_updatePost(id, title, body)){\n                return state.map(post => {\n                    if(post.id === id){\n                        post.body = body;\n                        post.title = title;\n                    }\n                    return post\n                })\n            }\n\n            return state\n  \n        default:\n            return state;\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}