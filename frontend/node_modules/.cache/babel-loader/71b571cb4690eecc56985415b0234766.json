{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport uniqid from 'uniqid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostForm({\n  url\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [post, setPost] = useState('');\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const timestamp = Date.now();\n    const newPost = {\n      id: uniqid(),\n      timestamp,\n      author: name,\n      body: post,\n      title,\n      deleted: false,\n      voteScore: 0\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        Authorization: \"garrison\"\n      },\n      body: { ...newPost\n      }\n    };\n    const response = await fetch(`${url}/posts/`, requestOptions);\n\n    if (response.ok) {\n      dispatch({\n        type: ADD_POST,\n        post: newPost\n      });\n    }\n\n    console.log(newPost);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setPost(e.target.value),\n      type: \"text\",\n      name: \"post\",\n      placeholder: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setName(e.target.value),\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"9QKOffhtTpUQC0L69l7JJ2joUpY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostForm.js"],"names":["React","useState","uniqid","useDispatch","useSelector","ADD_POST","PostForm","url","title","setTitle","post","setPost","name","setName","dispatch","submitForm","e","preventDefault","timestamp","Date","now","newPost","id","author","body","deleted","voteScore","requestOptions","method","headers","Authorization","response","fetch","ok","type","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA2B;AAAA;;AAEtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEpB,MAAM,EADE;AAEZgB,MAAAA,SAFY;AAGZK,MAAAA,MAAM,EAAEX,IAHI;AAIZY,MAAAA,IAAI,EAAEd,IAJM;AAKZF,MAAAA,KALY;AAMZiB,MAAAA,OAAO,EAAE,KANG;AAOZC,MAAAA,SAAS,EAAE;AAPC,KAAhB;AASA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAFU;AAGnBN,MAAAA,IAAI,EAAE,EAAC,GAAGH;AAAJ;AAHa,KAAvB;AAKA,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEzB,GAAI,SAAR,EAAkBoB,cAAlB,CAA5B;;AAEA,QAAGI,QAAQ,CAACE,EAAZ,EAAe;AAEXnB,MAAAA,QAAQ,CAAC;AAACoB,QAAAA,IAAI,EAAE7B,QAAP;AAAiBK,QAAAA,IAAI,EAAEW;AAAvB,OAAD,CAAR;AACH;;AAEDc,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACH,GA1BD;;AA4BA,sBAEI;AAAM,IAAA,QAAQ,EAAEN,UAAhB;AAAA,4BACI;AACI,MAAA,QAAQ,EAAEC,CAAC,IAAIP,QAAQ,CAACO,CAAC,CAACqB,MAAF,CAASC,KAAV,CAD3B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AACI,MAAA,QAAQ,EAAEtB,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACqB,MAAF,CAASC,KAAV,CAD1B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI;AACI,MAAA,QAAQ,EAAEtB,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACqB,MAAF,CAASC,KAAV,CAD1B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YAbJ,eAmBI;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAuBI;AACI,MAAA,IAAI,EAAC;AADT;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6BH;;GAhEuBhC,Q;UAKHH,W;;;KALGG,Q","sourcesContent":["import React, {useState} from 'react'\nimport uniqid from 'uniqid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ADD_POST } from '../actions'\n\nexport default function PostForm({ url }) {\n\n    const [title, setTitle] = useState('')\n    const [post, setPost] = useState('')\n    const [name, setName] = useState('')\n    const dispatch = useDispatch()\n\n    const submitForm = async (e) => {\n        e.preventDefault()\n\n        const timestamp = Date.now()\n        const newPost = {\n            id: uniqid(),\n            timestamp,\n            author: name,\n            body: post,\n            title,\n            deleted: false,\n            voteScore: 0\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { Authorization: \"garrison\"},\n            body: {...newPost}\n        }\n        const response = await fetch(`${url}/posts/`, requestOptions)\n\n        if(response.ok){\n\n            dispatch({type: ADD_POST, post: newPost})\n        }\n\n        console.log(newPost)\n    }\n\n    return (\n\n        <form onSubmit={submitForm}>\n            <input \n                onChange={e => setTitle(e.target.value)}\n                type='text' \n                name='title' \n                placeholder='title'/>\n\n            <input \n                onChange={e => setPost(e.target.value)}\n                type='text' \n                name='post' \n                placeholder='post'/>\n\n            <input \n                onChange={e => setName(e.target.value)}\n                type='text' \n                name='name' \n                placeholder='name'/>\n\n            <select name='categories'>\n                {}\n            </select>\n\n            <input \n                type='submit'/>            \n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}