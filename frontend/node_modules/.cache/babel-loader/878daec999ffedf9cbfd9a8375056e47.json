{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport uniqid from 'uniqid';\nimport { ADD_COMMENT } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentForm({\n  url,\n  parentId,\n  deleted\n}) {\n  _s();\n\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('');\n  const dispatch = useDispatch();\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const timestamp = Date.now();\n    const newComment = {\n      id: uniqid(),\n      timestamp,\n      parentId,\n      body,\n      author,\n      voteScore: 0,\n      deleted: false,\n      parentDeleted: deleted\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        Authorization: \"garrison\"\n      }\n    };\n    const response = await fetch(`${url}/comments/`, requestOptions);\n\n    if (response.ok) {\n      dispatch({\n        type: ADD_COMMENT,\n        comment: newComment\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setBody(e.target.value),\n      type: \"text\",\n      name: \"comment\",\n      placeholder: \"comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setAuthor(e.target.value),\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentForm, \"owNB56MN6HdQajl+Zz9k60bZjpA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/CommentForm.js"],"names":["React","useState","useDispatch","uniqid","ADD_COMMENT","CommentForm","url","parentId","deleted","body","setBody","author","setAuthor","dispatch","submitForm","e","preventDefault","timestamp","Date","now","newComment","id","voteScore","parentDeleted","requestOptions","method","headers","Authorization","response","fetch","ok","type","comment","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAArB,EAAgD;AAAA;;AAC3D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAGA,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,UAAU,GAAG;AACfC,MAAAA,EAAE,EAAElB,MAAM,EADK;AAEfc,MAAAA,SAFe;AAGfV,MAAAA,QAHe;AAIfE,MAAAA,IAJe;AAKfE,MAAAA,MALe;AAMfW,MAAAA,SAAS,EAAE,CANI;AAOfd,MAAAA,OAAO,EAAE,KAPM;AAQfe,MAAAA,aAAa,EAAEf;AARA,KAAnB;AAWA,UAAMgB,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB;AAFU,KAAvB;AAIA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEvB,GAAI,YAAR,EAAqBkB,cAArB,CAA5B;;AAEA,QAAGI,QAAQ,CAACE,EAAZ,EAAe;AAEXjB,MAAAA,QAAQ,CAAC;AAACkB,QAAAA,IAAI,EAAE3B,WAAP;AAAoB4B,QAAAA,OAAO,EAAEZ;AAA7B,OAAD,CAAR;AACH;AAEJ,GA3BD;;AA6BA,sBAEI;AAAM,IAAA,QAAQ,EAAEN,UAAhB;AAAA,4BACI;AACI,MAAA,QAAQ,EAAEC,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACkB,MAAF,CAASC,KAAV,CAD1B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,QAAQ,EAAEnB,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACkB,MAAF,CAASC,KAAV,CAD5B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AACI,MAAA,IAAI,EAAC;AADT;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH;;GApDuB7B,W;UAGHH,W;;;KAHGG,W","sourcesContent":["import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport uniqid from 'uniqid'\nimport { ADD_COMMENT } from '../actions'\n\nexport default function CommentForm({ url, parentId, deleted}) {\n    const [body, setBody] = useState('')\n    const [author, setAuthor] = useState('')\n    const dispatch = useDispatch()\n\n    const submitForm = async (e) => {\n        e.preventDefault()\n\n\n        const timestamp = Date.now()\n        const newComment = {\n            id: uniqid(),\n            timestamp,\n            parentId,\n            body,\n            author,\n            voteScore: 0,\n            deleted: false,\n            parentDeleted: deleted\n\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { Authorization: \"garrison\"}\n        }\n        const response = await fetch(`${url}/comments/`, requestOptions)\n\n        if(response.ok){\n\n            dispatch({type: ADD_COMMENT, comment: newComment})\n        }\n\n    }\n\n    return (\n\n        <form onSubmit={submitForm}>\n            <input \n                onChange={e => setBody(e.target.value)}\n                type='text' \n                name='comment' \n                placeholder='comment'/>\n            <input \n                onChange={e => setAuthor(e.target.value)}\n                type='text' \n                name='name' \n                placeholder='name'/>\n            <input \n                type='submit'/>            \n        </form>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}