{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport uniqid from 'uniqid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostForm({\n  url\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [post, setPost] = useState('');\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const dispatch = useDispatch();\n  const categories = useSelector(state => state.categories);\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const timestamp = Date.now();\n    const newPost = {\n      id: uniqid(),\n      timestamp,\n      author: name,\n      body: post,\n      title,\n      deleted: false,\n      voteScore: 0,\n      category\n    };\n    dispatch({\n      type: ADD_POST,\n      post: newPost\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setPost(e.target.value),\n      type: \"text\",\n      name: \"post\",\n      placeholder: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setName(e.target.value),\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"categories\",\n      onChange: e => setCategory(e.target.value),\n      children: categories ? categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.name,\n        children: category.name\n      }, category.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)) : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"fnT8YQ8BToJj0YUJj9nbYULOe/c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/PostForm.js"],"names":["React","useState","uniqid","useDispatch","useSelector","ADD_POST","PostForm","url","title","setTitle","post","setPost","name","setName","category","setCategory","dispatch","categories","state","submitForm","e","preventDefault","timestamp","Date","now","newPost","id","author","body","deleted","voteScore","type","target","value","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport uniqid from 'uniqid'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ADD_POST } from '../actions'\n\nexport default function PostForm({ url }) {\n\n    const [title, setTitle] = useState('')\n    const [post, setPost] = useState('')\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('')\n    const dispatch = useDispatch()\n    const categories = useSelector(state => state.categories)\n\n    const submitForm = async (e) => {\n        e.preventDefault()\n\n        const timestamp = Date.now()\n        const newPost = {\n            id: uniqid(),\n            timestamp,\n            author: name,\n            body: post,\n            title,\n            deleted: false,\n            voteScore: 0,\n            category\n        }\n        dispatch({type: ADD_POST, post: newPost})\n\n    }\n\n    return (\n\n        <form onSubmit={submitForm}>\n            <input \n                onChange={e => setTitle(e.target.value)}\n                type='text' \n                name='title' \n                placeholder='title'/>\n\n            <input \n                onChange={e => setPost(e.target.value)}\n                type='text' \n                name='post' \n                placeholder='post'/>\n\n            <input \n                onChange={e => setName(e.target.value)}\n                type='text' \n                name='name' \n                placeholder='name'/>\n\n            <select \n                name='categories'\n                onChange={e => setCategory(e.target.value)}\n            >\n                {categories ? \n                    categories.map(category => (\n                        <option key={category.name} value={category.name}>{category.name}</option>\n                    ))\n                : \n                '-'}\n            </select>\n\n            <input \n                type='submit'/>            \n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}