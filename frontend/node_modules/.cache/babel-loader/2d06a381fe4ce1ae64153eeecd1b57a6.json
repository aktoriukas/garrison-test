{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Vote.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Vote({\n  score,\n  handleClick,\n  className,\n  type\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `vote ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick('downVote', type),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick('upVote', type),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = Vote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Vote.js"],"names":["React","Vote","score","handleClick","className","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,SAArB;AAAgCC,EAAAA;AAAhC,CAAd,EAAqD;AAChE,sBACI;AAAK,IAAA,SAAS,EAAG,QAAOD,SAAU,EAAlC;AAAA,4BAEI;AAAQ,MAAA,OAAO,EAAE,MAAMD,WAAW,CAAC,UAAD,EAAaE,IAAb,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,gBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,QAAD,EAAWE,IAAX,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;KAZuBJ,I","sourcesContent":["import React from 'react'\n\nexport default function Vote({score, handleClick, className, type}) {\n    return (\n        <div className={`vote ${className}`}>\n\n            <button onClick={() => handleClick('downVote', type)}>-</button>\n\n            <span>{score}</span>\n\n            <button onClick={() => handleClick('upVote', type)}>+</button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}