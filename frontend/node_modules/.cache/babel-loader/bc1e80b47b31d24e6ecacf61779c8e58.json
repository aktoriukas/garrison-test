{"ast":null,"code":"import axios from 'axios';\nconst url = \"http://localhost:3001\";\nconst authorization = {\n  Authorization: \"garrison\"\n};\nexport const api_getAllPosts = async () => {\n  try {\n    const params = {\n      headers: authorization\n    };\n    const response = await axios.get(`${url}/posts`, params);\n    return [...response.data];\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_getCategories = async () => {\n  try {\n    const params = {\n      headers: authorization\n    };\n    const response = await axios.get(`${url}/categories`, params);\n    return [...response.data];\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_getSinglePost = async id => {\n  try {\n    const params = {\n      headers: authorization\n    };\n    const response = await axios.get(`${url}/posts/${id}`, params);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_getComments = async id => {\n  try {\n    const params = {\n      headers: authorization\n    };\n    const response = await axios.get(`${url}/posts/${id}/comments`, params);\n    return [...response.data];\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_addComment = async comment => {\n  try {\n    const response = await axios({\n      method: 'post',\n      url: `${url}/comments`,\n      headers: authorization,\n      data: { ...comment\n      }\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_votePost = async (id, action) => {\n  try {\n    const response = await axios({\n      method: 'post',\n      url: `${url}/posts/${id}`,\n      headers: authorization,\n      data: {\n        option: action\n      }\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_voteComment = async (id, action) => {\n  try {\n    const response = await axios({\n      method: 'post',\n      url: `${url}/comments/${id}`,\n      headers: authorization,\n      data: {\n        option: action\n      }\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_deletePost = async id => {\n  try {\n    const response = await axios({\n      method: 'delete',\n      url: `${url}/posts/${id}`,\n      headers: authorization\n    });\n    console.log(response);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_updatePost = async (id, title, body) => {\n  try {\n    const response = await axios({\n      method: 'put',\n      url: `${url}/posts/${id}`,\n      headers: authorization,\n      data: {\n        title,\n        body\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const api_addPost = async ({\n  id,\n  timestamp,\n  title,\n  body,\n  author,\n  category\n}) => {\n  try {\n    const response = await axios({\n      method: 'post',\n      url: `${url}/posts`,\n      headers: authorization,\n      data: {\n        id,\n        timestamp,\n        title,\n        body,\n        author,\n        category\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/API-calls/index.js"],"names":["axios","url","authorization","Authorization","api_getAllPosts","params","headers","response","get","data","err","console","log","api_getCategories","api_getSinglePost","id","api_getComments","api_addComment","comment","method","api_votePost","action","option","api_voteComment","api_deletePost","api_updatePost","title","body","api_addPost","timestamp","author","category"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n\nconst url = \"http://localhost:3001\";\nconst authorization = { Authorization: \"garrison\" }\n\nexport const api_getAllPosts = async () => {\n\n    try{\n        const params = {\n            headers: authorization\n        }\n    \n        const response = await axios.get(`${url}/posts`, params)\n        return [...response.data]\n\n    }catch (err) {console.log(err)}\n} \n\nexport const api_getCategories = async () => {\n    try{\n        const params = {\n            headers: authorization\n        }\n        const response = await axios.get(`${url}/categories`, params)\n        return [...response.data]\n    }catch (err) {console.log(err)}\n}\n\nexport const api_getSinglePost = async (id) => {\n\n    try{\n        const params = {\n            headers: authorization\n        }\n    \n        const response = await axios.get(`${url}/posts/${id}`, params)\n        return response.data\n    }\n    catch (err) { console.log(err) }\n\n}\n\nexport const api_getComments = async (id) => {\n\n    try{\n        const params = {\n            headers: authorization\n        }\n        const response = await axios.get(`${url}/posts/${id}/comments`, params)\n        return [...response.data]        \n    }\n    catch (err) { console.log(err) }\n\n}\n\nexport const api_addComment = async (comment) => {\n\n    try{\n        const response = await axios({\n            method: 'post',\n            url:`${url}/comments`,\n            headers: authorization,\n            data: {...comment}\n        })\n        return response\n\n    }catch (err) {console.log(err)}\n}\n\nexport const api_votePost = async (id, action) => {\n\n    try{\n        const response = await axios({\n            method: 'post',\n            url:`${url}/posts/${id}`,\n            headers: authorization,\n            data: { option: action }\n        })\n        return response\n\n    }catch (err) {console.log(err)}\n}\n\nexport const api_voteComment = async (id, action) => {\n\n    try{\n        const response = await axios({\n            method: 'post',\n            url:`${url}/comments/${id}`,\n            headers: authorization,\n            data: { option: action }\n        })\n        return response\n\n    }catch (err) {console.log(err)}\n}\n\nexport const api_deletePost = async (id) => {\n\n    try{\n        const response = await axios({\n            method: 'delete',\n            url:`${url}/posts/${id}`,\n            headers: authorization\n        })\n        console.log(response)\n        return response\n\n    }catch (err) {console.log(err)}\n}\n\nexport const api_updatePost = async (id, title, body) => {\n\n    try{\n\n        const response = await axios({\n            method: 'put',\n            url: `${url}/posts/${id}`,\n            headers: authorization,\n            data: { title, body}\n        })\n\n    }catch (err) {console.log(err)}\n}\n\nexport const api_addPost = async ( { id, timestamp, title, body, author, category } ) => {\n\n    try{\n\n        const response = await axios({\n            method: 'post',\n            url: `${url}/posts`,\n            headers: authorization,\n            data: {\n                id,\n                timestamp,\n                title,\n                body,\n                author,\n                category\n            }\n        })\n\n    }catch (err) {console.log(err)}\n}"]},"metadata":{},"sourceType":"module"}