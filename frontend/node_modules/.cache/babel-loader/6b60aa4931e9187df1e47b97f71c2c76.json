{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ADD_COMMENT } from '../actions';\nimport uniqid from 'uniqid';\nimport { api_addComment } from '../API-calls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentForm({\n  parentId\n}) {\n  _s();\n\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('');\n  const dispatch = useDispatch();\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const timestamp = Date.now();\n    const newComment = {\n      id: uniqid(),\n      timestamp,\n      parentId,\n      body,\n      author\n    };\n    dispatch({\n      type: ADD_COMMENT,\n      newComment\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setBody(e.target.value),\n      type: \"text\",\n      name: \"comment\",\n      placeholder: \"comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setAuthor(e.target.value),\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentForm, \"owNB56MN6HdQajl+Zz9k60bZjpA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/CommentForm.js"],"names":["React","useState","useDispatch","ADD_COMMENT","uniqid","api_addComment","CommentForm","parentId","body","setBody","author","setAuthor","dispatch","submitForm","e","preventDefault","timestamp","Date","now","newComment","id","type","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AAAA;;AAC9C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,UAAU,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAGA,UAAMC,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;AACA,UAAMC,UAAU,GAAG;AACfC,MAAAA,EAAE,EAAEhB,MAAM,EADK;AAEfY,MAAAA,SAFe;AAGfT,MAAAA,QAHe;AAIfC,MAAAA,IAJe;AAKfE,MAAAA;AALe,KAAnB;AAQAE,IAAAA,QAAQ,CAAC;AAACS,MAAAA,IAAI,EAAElB,WAAP;AAAoBgB,MAAAA;AAApB,KAAD,CAAR;AAEH,GAfD;;AAiBA,sBAEI;AAAM,IAAA,QAAQ,EAAEN,UAAhB;AAAA,4BACI;AACI,MAAA,QAAQ,EAAEC,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAD1B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,SAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AACI,MAAA,QAAQ,EAAET,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACQ,MAAF,CAASC,KAAV,CAD5B;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AACI,MAAA,IAAI,EAAC;AADT;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkBH;;GAxCuBjB,W;UAGHJ,W;;;KAHGI,W","sourcesContent":["import React, {useState} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ADD_COMMENT } from '../actions'\nimport uniqid from 'uniqid'\nimport { api_addComment } from '../API-calls'\n\nexport default function CommentForm({ parentId }) {\n    const [body, setBody] = useState('')\n    const [author, setAuthor] = useState('')\n    const dispatch = useDispatch()\n\n    const submitForm = async (e) => {\n        e.preventDefault()\n\n\n        const timestamp = Date.now()\n        const newComment = {\n            id: uniqid(),\n            timestamp,\n            parentId,\n            body,\n            author,\n        }\n\n        dispatch({type: ADD_COMMENT, newComment})\n\n    }\n\n    return (\n\n        <form onSubmit={submitForm}>\n            <input \n                onChange={e => setBody(e.target.value)}\n                type='text' \n                name='comment' \n                placeholder='comment'/>\n            <input \n                onChange={e => setAuthor(e.target.value)}\n                type='text' \n                name='name' \n                placeholder='name'/>\n            <input \n                type='submit'/>            \n        </form>\n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}