{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { api_votePost } from '../API-calls';\nimport { UPVOTE_POST, DOWNVOTE_POST, DELETE_POST, UPDATE_POST } from '../actions';\nimport { Link } from 'react-router-dom';\nimport Vote from './Vote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  id\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [edit, setEdit] = useState(false);\n  const [body, setBody] = useState(post.body);\n  const [title, setTitle] = useState(post.title);\n\n  const handleClick = action => {\n    switch (action) {\n      case 'upVote':\n        dispatch({\n          type: UPVOTE_POST,\n          id\n        });\n        break;\n\n      case 'downVote':\n        dispatch({\n          type: DOWNVOTE_POST,\n          id\n        });\n        break;\n\n      case 'delete':\n        dispatch({\n          type: DELETE_POST,\n          id\n        });\n        break;\n\n      case 'edit-save':\n        dispatch({\n          type: UPDATE_POST,\n          id,\n          title,\n          body\n        });\n        setEdit(false);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post.deleted === false ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setBody(e.target.value),\n          value: body,\n          placeholder: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          placeholder: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick('edit-save'),\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Vote, {\n        handleClick: handleClick,\n        score: post.voteScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick('delete'),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEdit(true),\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${post.category}/${post.id}`,\n        children: \"link\"\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : ''\n  }, void 0, false);\n}\n\n_s(Post, \"f6FRJeSoF0vT3sc7NfqqtgbnhZg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js"],"names":["React","useState","useSelector","useDispatch","api_votePost","UPVOTE_POST","DOWNVOTE_POST","DELETE_POST","UPDATE_POST","Link","Vote","Post","post","id","dispatch","edit","setEdit","body","setBody","title","setTitle","handleClick","action","type","deleted","e","target","value","voteScore","category"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { api_votePost } from '../API-calls'\n\nimport { \n    UPVOTE_POST,\n    DOWNVOTE_POST,\n    DELETE_POST,\n    UPDATE_POST } from '../actions'\n    \nimport { Link } from 'react-router-dom'\n\nimport Vote from './Vote'\n\nexport default function Post({ post, id }) {\n\n    const dispatch = useDispatch()\n\n    const [edit, setEdit] = useState(false)\n    const [body, setBody] = useState(post.body)\n    const [title, setTitle] = useState(post.title)\n\n    const handleClick = (action) => {\n\n        switch(action){\n            case 'upVote':\n                dispatch({type: UPVOTE_POST, id})\n                break\n\n            case 'downVote':\n                dispatch({type: DOWNVOTE_POST, id})\n                break\n\n            case 'delete':\n                dispatch({type: DELETE_POST, id})\n                break\n\n            case 'edit-save':\n                dispatch({type: UPDATE_POST, id, title, body})\n                setEdit(false)\n            default:\n                break\n        }\n    }\n\n    return (\n        <>\n            {post.deleted === false ?\n            \n                <li>\n        \n\n                    {edit?\n                        <>\n                            <input \n                                onChange={e => setBody(e.target.value)}\n                                value={body} \n                                placeholder='post' />\n                            <input \n                                onChange={e => setTitle(e.target.value)}\n                                value={title} \n                                placeholder='title' />\n                            <button\n                                onClick={() => handleClick('edit-save')}\n                            >save</button>\n                        </>\n                        :\n                        <h3>{post.title}</h3>\n                    }\n        \n        \n                    <Vote handleClick={handleClick} score={post.voteScore} />\n        \n                    <button onClick={() => handleClick('delete')}>delete</button>\n                    <button onClick={() => setEdit(true)}>edit</button>\n        \n                    <Link key={post.id} to={`/${post.category}/${post.id}`}>\n                        link\n                    </Link>\n                </li>\n            :\n            ''\n            }\n        </>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}