{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UPVOTE_POST, DOWNVOTE_POST, DELETE_POST, UPDATE_POST } from '../actions';\nimport { Link } from 'react-router-dom';\nimport { api_getComments } from '../API-calls';\nimport Vote from './Vote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  id\n}) {\n  _s();\n\n  useEffect(() => {\n    getComments();\n  }, []);\n  const dispatch = useDispatch();\n  const [edit, setEdit] = useState(false);\n  const [body, setBody] = useState(post.body);\n  const [title, setTitle] = useState(post.title);\n  const [commentsCount, setCommentsCount] = useState(0);\n\n  const getComments = async () => {\n    const comments = await api_getComments(id);\n    setCommentsCount(comments.length);\n  };\n\n  const handleClick = action => {\n    switch (action) {\n      case 'upVote':\n        dispatch({\n          type: UPVOTE_POST,\n          id\n        });\n        break;\n\n      case 'downVote':\n        dispatch({\n          type: DOWNVOTE_POST,\n          id\n        });\n        break;\n\n      case 'delete':\n        dispatch({\n          type: DELETE_POST,\n          id\n        });\n        break;\n\n      case 'edit-save':\n        dispatch({\n          type: UPDATE_POST,\n          id,\n          title,\n          body\n        });\n        setEdit(false);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: post.deleted === false ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setBody(e.target.value),\n          value: body,\n          placeholder: \"post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTitle(e.target.value),\n          value: title,\n          placeholder: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick('edit-save'),\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(Vote, {\n          handleClick: handleClick,\n          score: post.voteScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick('delete'),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEdit(true),\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments\",\n          children: [\"Comments: \", commentsCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${post.category}/${post.id}`,\n          children: \"link\"\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : ''\n  }, void 0, false);\n}\n\n_s(Post, \"BpanNgJTEe9EyI4Ox+NFBpDYS2c=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js"],"names":["React","useState","useEffect","useDispatch","UPVOTE_POST","DOWNVOTE_POST","DELETE_POST","UPDATE_POST","Link","api_getComments","Vote","Post","post","id","getComments","dispatch","edit","setEdit","body","setBody","title","setTitle","commentsCount","setCommentsCount","comments","length","handleClick","action","type","deleted","e","target","value","voteScore","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { \n    UPVOTE_POST,\n    DOWNVOTE_POST,\n    DELETE_POST,\n    UPDATE_POST } from '../actions'\n    \nimport { Link } from 'react-router-dom'\nimport { api_getComments } from '../API-calls'\nimport Vote from './Vote'\n\nexport default function Post({ post, id }) {\n\n    useEffect(() => {\n        getComments()\n    }, [])\n\n    const dispatch = useDispatch()\n\n    const [edit, setEdit] = useState(false)\n    const [body, setBody] = useState(post.body)\n    const [title, setTitle] = useState(post.title)\n    const [commentsCount, setCommentsCount] = useState(0)\n\n    const getComments = async () => {\n        const comments = await api_getComments(id)\n        setCommentsCount(comments.length)\n    }\n\n    const handleClick = (action) => {\n\n        switch(action){\n            case 'upVote':\n                dispatch({type: UPVOTE_POST, id})\n                break\n\n            case 'downVote':\n                dispatch({type: DOWNVOTE_POST, id})\n                break\n\n            case 'delete':\n                dispatch({type: DELETE_POST, id})\n                break\n\n            case 'edit-save':\n                dispatch({type: UPDATE_POST, id, title, body})\n                setEdit(false)\n            default:\n                break\n        }\n    }\n\n    return (\n        <>\n            {post.deleted === false ?\n            \n                <li>\n\n                    {edit?\n                        <>\n                            <input \n                                onChange={e => setBody(e.target.value)}\n                                value={body} \n                                placeholder='post' />\n                            <input \n                                onChange={e => setTitle(e.target.value)}\n                                value={title} \n                                placeholder='title' />\n                            <button\n                                onClick={() => handleClick('edit-save')}\n                            >save</button>\n                        </>\n                        :\n                        <h3>{post.title}</h3>\n                    }\n        \n                    <div className='options'>\n                        <Vote handleClick={handleClick} score={post.voteScore} />\n            \n                        <button onClick={() => handleClick('delete')}>delete</button>\n                        <button onClick={() => setEdit(true)}>edit</button>\n            \n                        <div className='comments'>Comments: {commentsCount}</div>\n                        <Link key={post.id} to={`/${post.category}/${post.id}`}>\n                            link\n                        </Link>\n                    </div>\n                </li>\n            :\n            ''\n            }\n        </>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}