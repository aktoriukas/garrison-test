{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/FullPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { api_votePost, api_getSinglePost } from '../API-calls';\nimport { ADD_POST } from '../actions';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullPost({\n  match\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const id = match.params.id;\n  const posts = useSelector(state => state.posts);\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    if (posts.length > 0) {\n      posts.forEach(post => {\n        if (post.id === id) setPost(post);\n      });\n    } else {\n      getSinglePost();\n    }\n  }, []);\n\n  const getSinglePost = async () => {\n    const post = await api_getSinglePost(id);\n    console.log([post]);\n    dispatch({\n      type: ADD_POST,\n      post\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: post.deleted === false ? /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Vote, {\n        handleClick: handleClick,\n        score: post.voteScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), comments.map(comment => {\n        if (!comment.deleted) return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 53\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(CommentForm, {\n        parentId: id || match.params.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FullPost, \"6HvPH6Zx67XFlNQEfh6nALvx/vM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FullPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullPost\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/FullPost.js"],"names":["React","useEffect","useState","useSelector","useDispatch","api_votePost","api_getSinglePost","ADD_POST","CommentForm","FullPost","match","dispatch","id","params","posts","state","post","setPost","length","forEach","getSinglePost","console","log","type","deleted","title","body","handleClick","voteScore","comments","map","comment"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,cAAhD;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAAA;;AAE1C,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,EAAE,GAAGF,KAAK,CAACG,MAAN,CAAaD,EAAxB;AACA,QAAME,KAAK,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAChBJ,MAAAA,KAAK,CAACK,OAAN,CAAcH,IAAI,IAAI;AAClB,YAAGA,IAAI,CAACJ,EAAL,KAAYA,EAAf,EAAmBK,OAAO,CAACD,IAAD,CAAP;AACtB,OAFD;AAGH,KAJD,MAIK;AACDI,MAAAA,aAAa;AAChB;AACJ,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMA,aAAa,GAAG,YAAY;AAC9B,UAAMJ,IAAI,GAAG,MAAMV,iBAAiB,CAACM,EAAD,CAApC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACN,IAAD,CAAZ;AACAL,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAEhB,QAAP;AAAiBS,MAAAA;AAAjB,KAAD,CAAR;AACH,GAJD;;AAOA,sBACI;AAAA,cACKA,IAAI,CAACQ,OAAL,KAAiB,KAAjB,gBAED;AAAA,8BAEI;AAAA,kBAAKR,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA,kBAAIT,IAAI,CAACU;AAAT;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,IAAD;AAAM,QAAA,WAAW,EAAEC,WAAnB;AAAgC,QAAA,KAAK,EAAEX,IAAI,CAACY;AAA5C;AAAA;AAAA;AAAA;AAAA,cANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAYSC,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;AACrB,YAAG,CAACA,OAAO,CAACP,OAAZ,EAAqB,oBAAO,QAAC,OAAD;AAEQ,UAAA,OAAO,EAAEO;AAFjB,WACaA,OAAO,CAACnB,EADrB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGpB,OAJJ,CAZT,eAkBQ,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA,EAAE,IAAIF,KAAK,CAACG,MAAN,CAAaD;AAA1C;AAAA;AAAA;AAAA;AAAA,cAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC,GAwBD;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAtDuBH,Q;UAEHL,W,EAEHD,W;;;KAJMM,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { api_votePost, api_getSinglePost } from '../API-calls'\nimport { ADD_POST } from '../actions'\nimport CommentForm from './CommentForm'\n\nexport default function FullPost( { match } ) {\n\n    const dispatch = useDispatch()\n    const id = match.params.id\n    const posts = useSelector(state => state.posts)\n    const [post, setPost] = useState([])\n    \n    useEffect(() => {\n        if(posts.length > 0){\n            posts.forEach(post => {\n                if(post.id === id) setPost(post)\n            });\n        }else{\n            getSinglePost()\n        }\n    }, [])\n\n    const getSinglePost = async () => {\n        const post = await api_getSinglePost(id)\n        console.log([post])\n        dispatch({type: ADD_POST, post })\n    }\n\n\n    return (\n        <div>\n            {post.deleted === false ?\n            \n            <li>\n    \n                <h3>{post.title}</h3>\n    \n                <p>{post.body}</p>\n    \n                <Vote handleClick={handleClick} score={post.voteScore} />\n    \n                <button>delete</button>\n                <button>edit</button>\n    \n                \n                    {comments.map(comment => {\n                        if(!comment.deleted) return <Comment \n                                                            key={comment.id} \n                                                            comment={comment}/>\n                        })}\n\n                    <CommentForm parentId={id || match.params.id}/>\n        \n            </li>\n            :\n            ''\n            }\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}