{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { api_getSinglePost, api_getComments } from '../API-calls';\nimport Vote from './Vote';\nimport Comment from './Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  match,\n  id\n}) {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState(false);\n  useEffect(() => {\n    getSinglePost();\n    if (match) getComments();\n  }, []);\n\n  const getSinglePost = async () => {\n    const post = await api_getSinglePost(id || match.params.id);\n    setPost(post);\n  };\n\n  const getComments = async () => {\n    const comments = await api_getComments(match.params.id);\n    setComments(comments);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Vote, {\n      score: post.voteScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), comments ? /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"HhfSyv2Pzm0+T+54fF3tn6KnIyw=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/Post.js"],"names":["React","useEffect","useState","useSelector","useDispatch","api_getSinglePost","api_getComments","Vote","Comment","Post","match","id","post","setPost","comments","setComments","getSinglePost","getComments","params","title","body","voteScore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,cAAnD;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAd,EAA8B;AAAA;;AAEzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZe,IAAAA,aAAa;AACb,QAAGN,KAAH,EAAUO,WAAW;AAExB,GALQ,EAKN,EALM,CAAT;;AAQA,QAAMD,aAAa,GAAG,YAAY;AAC9B,UAAMJ,IAAI,GAAG,MAAMP,iBAAiB,CAACM,EAAE,IAAID,KAAK,CAACQ,MAAN,CAAaP,EAApB,CAApC;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAHD;;AAIA,QAAMK,WAAW,GAAG,YAAY;AAC5B,UAAMH,QAAQ,GAAG,MAAMR,eAAe,CAACI,KAAK,CAACQ,MAAN,CAAaP,EAAd,CAAtC;AACAI,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GAHD;;AAMA,sBACI;AAAA,4BAEI;AAAA,gBAAKF,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,gBAAIP,IAAI,CAACQ;AAAT;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAER,IAAI,CAACS;AAAlB;AAAA;AAAA;AAAA;AAAA,YANJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAWKP,QAAQ,gBAEL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFK,GAIL,EAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA9CuBL,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { api_getSinglePost, api_getComments } from '../API-calls'\n\nimport Vote from './Vote'\nimport Comment from './Comment'\n\nexport default function Post({ match, id  }) {\n\n    const [post, setPost] = useState([])\n    const [comments, setComments] = useState(false)\n\n    useEffect(() => {\n\n        getSinglePost()\n        if(match) getComments()\n\n    }, [])\n\n\n    const getSinglePost = async () => {\n        const post = await api_getSinglePost(id || match.params.id)\n        setPost(post)\n    }\n    const getComments = async () => {\n        const comments = await api_getComments(match.params.id)\n        setComments(comments)\n    }\n\n\n    return (\n        <li>\n\n            <h3>{post.title}</h3>\n\n            <p>{post.body}</p>\n\n            <Vote score={post.voteScore} />\n\n            <button>delete</button>\n            <button>edit</button>\n\n            {comments ?\n            \n                <Comment />\n                :\n                ''\n            \n            }\n\n        </li>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}