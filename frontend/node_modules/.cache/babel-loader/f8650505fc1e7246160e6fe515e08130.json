{"ast":null,"code":"var _jsxFileName = \"/home/aktoriukas/Documents/garrison-test2/frontend/src/components/FullPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { api_votePost } from '../API-calls';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullPost({\n  match\n}) {\n  _s();\n\n  const id = match.params.id;\n  useEffect(() => {\n    getSinglePost();\n  }, []); // const getSinglePost = async () => {\n  //     const post = await api_getSinglePost(id)\n  //     setPost(dispatch(({type: ADD_POST, post})).post)\n  // }\n  // const getComments = async () => {\n  //     const comments = await api_getComments(id)\n  //     setComments(dispatch(({type: RECEIVE_COMMENTS, comments})).comments)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FullPost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FullPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullPost\");","map":{"version":3,"sources":["/home/aktoriukas/Documents/garrison-test2/frontend/src/components/FullPost.js"],"names":["React","useEffect","useSelector","useDispatch","api_votePost","CommentForm","FullPost","match","id","params","getSinglePost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AAExC,QAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,aAAa;AAEhB,GAJQ,EAIN,EAJM,CAAT,CAJwC,CAUxC;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAtDuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { api_votePost } from '../API-calls'\nimport CommentForm from './CommentForm'\n\nexport default function FullPost({ match }) {\n\n    const id = match.params.id\n\n    useEffect(() => {\n\n        getSinglePost()\n\n    }, [])\n\n    // const getSinglePost = async () => {\n\n    //     const post = await api_getSinglePost(id)\n    //     setPost(dispatch(({type: ADD_POST, post})).post)\n\n    // }\n\n    // const getComments = async () => {\n    //     const comments = await api_getComments(id)\n        \n    //     setComments(dispatch(({type: RECEIVE_COMMENTS, comments})).comments)\n    // }\n\n    return (\n        <div>\n            {/* {post.deleted === false ?\n            \n            <li>\n    \n                <h3>{post.title}</h3>\n    \n                <p>{post.body}</p>\n    \n                <Vote handleClick={handleClick} score={post.voteScore} />\n    \n                <button>delete</button>\n                <button>edit</button>\n    \n                \n                    {comments.map(comment => {\n                        if(!comment.deleted) return <Comment \n                                                        key={comment.id} \n                                                        comment={comment}/>\n                    })}\n\n                <CommentForm parentId={id || match.params.id}/>\n      \n            </li>\n        :\n        ''\n        } */}\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}